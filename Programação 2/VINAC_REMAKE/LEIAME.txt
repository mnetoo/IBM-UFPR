Autor: Marcus Sebastião Adriano Rocha Neto - GRR20240710
Curso: Informática Biomédica - UFPR
Disciplina: Programação 2 - Vinícius Fülber Garcia




Estrutura do Projeto:

- vinac.c ................. Arquivo principal com as funções do programa (i_option, r_option, x_option etc.)

- lz.h ........... Biblioteca disponibilizada para lidar com compressão de descompressão de arquivos.
----- lz.c ........... Implementação das funções de compressão e descompressão.

- membro.h .............. Declaração do tipo MEMBRO e funções auxiliares para manipulação dos membros.
----- membro.c ........... Implementação das funções para lidar com membros.

- functions.h .............. Declaração das funções principais do software.
----- functions.c ........... Implementação das funções.

- Makefile ............... Arquivo de build para compilar o projeto.

- Arquivos do formato .txt para testes do programa.




Algoritmos e Estruturas de Dados:

- Ordenação dos membros:
  - O projeto não usa um algoritmo de ordenação explícito. A ordenação é implícita e sequencial, baseada na ordem dos membros no vetor após cada operação.





Decisões:

- Também considerei manter o diretório no ínicio do arquivo, mas isso complicava a atualização. 
  - Solução final: diretório mantido no final do arquivo, facilitando reescrita com `fseek` e também a visualização do conteúdos dos arquivos de testes.
- Estrutura de membro separada.
- Verificação de membro já existente
  - Decidi que quando verificar se o membro que estou inserindo já existe, verificar se ele foi inserido sem compressão ou com compressão e dependendo do tipo da inserção do membro eu insiro como um novo. Se existe um arquivo "grande.txt" que foi inserido sem compressão e agora vou inserir o mesmo arquivo com compressão, eles são arquivos diferentes e vice versa.





Dificuldades encontradas:

- Manipulação do ponteiro do arquivo para evitar sobrescrever dados ao abrir o archive existente.
- Descompressão indevida de arquivos não comprimidos.
  - Corrigido com a inclusão de uma flag `comprimido` no struct `Membro`.
- Ordenação dos membros no diretório exibido (corrigido posteriormente).
- Achei a manipulação dos offsets difícil nas operações.
- Gerenciamento de memória. Tentei encontrar a fonte dos erros apontados pelo Valgrind, mas não consegui resolvê-los.
- Achei difícil lidar com  fread, fwrite, fseek e ftell.






Bugs conhecidos:

- Se o usuário interromper o programa no meio da execução, o archive pode ficar corrompido.
- Erros apontados pelo valgrind na função "i_option":
  -  ==13286==  Address 0x4a909e1 is 0 bytes after a block of size 1,665 alloc'd
  - ==13286== ERROR SUMMARY: 22 errors from 1 contexts (suppressed: 0 from 0)


